/*
Bmp 4/8 Bits to GBA Converter By Bruno Vedder.
With modifications by Pete Elmore.
spr/spr_bullet_explode.bmp Opened.
Bmp signature found.
Bmp width: 8
Bmp height: 64
Bmp not compressed: ok.
One plane.
Bmp is 4 Bit per pixel.
8 colors used. (0 mean full bpp).
Bmp data starts at 56h.
Allocating 256 bytes.
CMAP loaded.
Data loaded. */
namespace TILEINFO_spr_bullet_explode {
  enum {
    w = 1,
    h = 8,
    size = 8,
  };
  const unsigned short palette[] = {
    0x0,0xd,0x16,0x1f,0x1ff,0x3ff,0x3fff,0x7fff,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,
};

  const unsigned char img[] = {

    // Tile [0 , 0] 
    0x0,0x0,0x0,0x0,
    0x0,0x0,0x0,0x0,
    0x0,0x10,0x1,0x0,
    0x0,0x21,0x12,0x0,
    0x0,0x21,0x12,0x0,
    0x0,0x10,0x1,0x0,
    0x0,0x0,0x0,0x0,
    0x0,0x0,0x0,0x0,
    
    // Tile [0 , 1] 
    0x0,0x0,0x0,0x0,
    0x0,0x10,0x1,0x0,
    0x0,0x21,0x12,0x0,
    0x10,0x32,0x23,0x1,
    0x10,0x32,0x23,0x1,
    0x0,0x21,0x12,0x0,
    0x0,0x10,0x1,0x0,
    0x0,0x0,0x0,0x0,
    
    // Tile [0 , 2] 
    0x0,0x20,0x2,0x0,
    0x0,0x20,0x2,0x0,
    0x0,0x32,0x23,0x0,
    0x22,0x43,0x34,0x22,
    0x22,0x43,0x34,0x22,
    0x0,0x32,0x23,0x0,
    0x0,0x20,0x2,0x0,
    0x0,0x20,0x2,0x0,
    
    // Tile [0 , 3] 
    0x0,0x20,0x2,0x0,
    0x0,0x30,0x3,0x0,
    0x0,0x43,0x34,0x0,
    0x32,0x54,0x45,0x23,
    0x32,0x54,0x45,0x23,
    0x0,0x43,0x34,0x0,
    0x0,0x30,0x3,0x0,
    0x0,0x20,0x2,0x0,
    
    // Tile [0 , 4] 
    0x0,0x20,0x2,0x0,
    0x0,0x43,0x34,0x0,
    0x30,0x54,0x45,0x3,
    0x42,0x65,0x56,0x24,
    0x42,0x65,0x56,0x24,
    0x30,0x54,0x45,0x3,
    0x0,0x43,0x34,0x0,
    0x0,0x20,0x2,0x0,
    
    // Tile [0 , 5] 
    0x0,0x30,0x3,0x0,
    0x0,0x54,0x45,0x0,
    0x40,0x65,0x56,0x4,
    0x53,0x76,0x67,0x35,
    0x53,0x76,0x67,0x35,
    0x40,0x65,0x56,0x4,
    0x0,0x54,0x45,0x0,
    0x0,0x30,0x3,0x0,
    
    // Tile [0 , 6] 
    0x0,0x40,0x4,0x0,
    0x0,0x54,0x45,0x0,
    0x40,0x75,0x57,0x4,
    0x54,0x77,0x77,0x45,
    0x54,0x77,0x77,0x45,
    0x40,0x75,0x57,0x4,
    0x0,0x54,0x45,0x0,
    0x0,0x40,0x4,0x0,
    
    // Tile [0 , 7] 
    0x0,0x54,0x45,0x0,
    0x40,0x65,0x56,0x4,
    0x54,0x76,0x67,0x45,
    0x65,0x77,0x77,0x56,
    0x65,0x77,0x77,0x56,
    0x54,0x76,0x67,0x45,
    0x40,0x65,0x56,0x4,
    0x0,0x54,0x45,0x0,
      };
  inline u16 *copyImage(u16 *vram) {
    for (u32 i = 0; i < sizeof(img) / 2; ++i) {
      *vram++ = img[i * 2] | (img[i * 2 + 1] << 8);
    }
    return vram;
  }
  inline u16 *copyPalette(u16 *pal) {
    for (u32 i = 0; i < sizeof(palette) / 2; ++i) {
      *pal++ = palette[i];
    }
    return pal;
  }
};
